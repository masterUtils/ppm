generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Config {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id   Int    @id @default(autoincrement())
  name String @unique

  msAccount   String?
  msSectionId String?

  createdAt DateTime @default(now())

  bbdcID      String?
  wordsRecord WordsRecord[]
}

model Problem {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  solveRecords SolveRecord[]
  picUrl       String?
  subject      Subject
  sourceBook   SourceBook?   @relation(fields: [sourceBookId], references: [id])
  sourceBookId Int?
}

model SourceBook {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  problems   Problem[]
  subject    Subject
  pagePics   String[]
  answerPics String[]
  createdAt  DateTime  @default(now())
}

model SolveRecord {
  id               Int      @id @default(autoincrement())
  problem          Problem  @relation(fields: [problemId], references: [id])
  problemId        Int
  oneNoteWebUrl    String
  oneNoteClientUrl String
  result           Result
  createdAt        DateTime @default(now())
}

model WordsRecord {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  date      String
  review    Int
  learn     Int
  duration  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, date])
}

enum Subject {
  MATH // 数学
  POLITICS // 政治
  OPERATING_SYSTEM // 操作系统
  COMPUTER_NETWORK // 计算机网络
  DATA_STRUCTURE // 数据结构
  POCO // 计算机组成原理
  ENGLISH // 英语
}

enum Result {
  CORRECT
  FAILED
}
